{"version":3,"sources":["components/MapContext.js","utils/KmlReader.js","components/MySnackbarContentWrapper.js","components/MapUrlFrom.js","components/MapInformationPlacemark.js","components/MapInformation.js","App.js","serviceWorker.js","index.js"],"names":["defaultValues","mapKmlData","initialiseMapData","data","Object","assign","MapContext","createContext","MapContextProvider","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","resetValues","setState","map","defaultContextualHelpValue","setValues","values","objectSpread","state","mapData","setMapKmlData","inherits","createClass","key","value","react_default","a","createElement","Provider","children","React","Component","withMapContext","Consumer","WrappedComponent","_class","_temp","_React$Component2","Map","apply","arguments","_this2","_ref","displayName","concat","name","getMapKml","_x","_getMapKml","_callee","mapURL","mapKmlFile","mapKmlText","regenerator_default","wrap","_context","prev","next","fetch","sent","text","fromKmlToJs","t0","status","message","abrupt","stop","_x2","_fromKmlToJs","_callee2","mapKmlObj","_context2","convert","xml2json","compact","spaces","JSON","parse","kml","Document","error","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","display","alignItems","classes","className","onClose","variant","other","objectWithoutProperties","Icon","SnackbarContent_default","classNames","aria-describedby","id","action","IconButton_default","aria-label","color","close","onClick","Close_default","MapUrlFrom","mapUrl","isValidUrl","snackbar","open","onInputChange","bind","assertThisInitialized","onFormSubmit","onCloseSnackbar","showSnackbar","event","reason","e","newMapUrlValue","target","test","preventDefault","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","components_MySnackbarContentWrapper","Card_default","card","CardContent_default","content","onSubmit","Grid_default","container","direction","justify","item","xs","TextField_default","required","onChange","label","helperText","textField","margin","fullWidth","Button_default","button","type","disabled","marginTop","details","flexDirection","flex","cover","width","height","controls","paddingLeft","paddingBottom","withTheme","placemark","getCoordinatesValues","Point","coordinates","coordinateValue","lat","lng","coordinateText","_text","_cdata","split","length","trim","CardMedia_default","image","coordinatesValues","getCoordinates","title","Typography_default","component","getName","react","LocationOn_default","getCoordinateElement","description","getDescriptionElement","MapInformation","console","log","obj","hasOwnProperty","isEmpty","root","Fab_default","printButton","LocalPrintshop_default","Folder","folder","Placemark","components_MapInformationPlacemark","position","bottom","right","App","MapContext_MapContextProvider","sm","components_MapUrlFrom","components_MapInformation","background","default","overflow","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6a55e02.chunk.js","sourcesContent":["import React, { createContext } from 'react';\n\nconst defaultValues = {\n  mapKmlData: {}\n};\n\nconst initialiseMapData = data => {\n  return Object.assign(defaultValues, data);\n};\n\nconst MapContext = createContext();\n\nexport class MapContextProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: initialiseMapData(props.defaultContextualHelpValue)\n    };\n  }\n\n  resetValues = () => {\n    this.setState({\n      map: initialiseMapData(this.props.defaultContextualHelpValue)\n    });\n  };\n\n  setValues = values => {\n    this.setState({\n      map: {\n        ...this.state.mapData,\n        ...values\n      }\n    });\n  };\n\n  setMapKmlData = mapKmlData => {\n    this.setState({\n      map: {\n        ...this.state.mapData,\n        mapKmlData\n      }\n    });\n  };\n\n  render() {\n    const { map } = this.state;\n\n    return (\n      <MapContext.Provider\n        value={{\n          map: {\n            ...map,\n            setValues: this.setValues,\n            resetValues: this.resetValues,\n            setMapKmlData: this.setMapKmlData\n          }\n        }}\n        children={this.props.children}\n      />\n    );\n  }\n}\n\nexport const MapConsumer = MapContext.Consumer;\n\nexport const withMapContext = WrappedComponent => {\n  return class Map extends React.Component {\n    static displayName = `withMapContext(${WrappedComponent.displayName ||\n      WrappedComponent.name})`;\n\n    render() {\n      return (\n        <MapContext.Consumer>\n          {({ map }) => <WrappedComponent {...this.props} map={map} />}\n        </MapContext.Consumer>\n      );\n    }\n  };\n};\n","import convert from 'xml-js';\n\n/**\n * Get the information of the map specified in the URL\n * ! The map of the URL passed to this function needs to be public\n *\n * @param mapURL URL of the map\n */\nexport async function getMapKml(mapURL) {\n  let mapKmlData;\n\n  try {\n    const mapKmlFile = await fetch(mapURL);\n    const mapKmlText = await mapKmlFile.text();\n    mapKmlData = await fromKmlToJs(mapKmlText);\n  } catch (error) {\n    mapKmlData = {\n      status: 'error',\n      message: 'There has been a problem with the URL, please check that URL provided is a valid and public URL',\n      // message: error + '',\n      data: {}\n    };\n  }\n\n  return mapKmlData;\n}\n\n/**\n * Transform a KML/XML file to an object\n *\n * @param mapKmlText KML/XML of the map\n */\nexport async function fromKmlToJs(mapKmlText) {\n  let mapKmlData = {\n    status: 'success',\n    message: 'success',\n    data: {}\n  };\n\n  try {\n    let mapKmlObj = convert.xml2json(mapKmlText, { compact: true, spaces: 4 });\n    mapKmlObj = JSON.parse(mapKmlObj);\n    mapKmlObj = mapKmlObj.kml.Document;\n\n    mapKmlData = {\n      status: 'success',\n      message: 'success',\n      data: mapKmlObj\n    };\n  } catch (error) {\n    mapKmlData = {\n      status: 'error',\n      message: error + '',\n      data: {}\n    };\n  }\n\n  return mapKmlData;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby='client-snackbar'\n      message={\n        <span id='client-snackbar' className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key='close'\n          aria-label='Close'\n          color='inherit'\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nexport default MySnackbarContentWrapper;\n","import React, { Component } from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { getMapKml } from '../utils/KmlReader';\nimport { withMapContext } from './MapContext';\nimport MySnackbarContentWrapper from './MySnackbarContentWrapper';\n\nconst styles = theme => ({\n  card: {\n    marginTop: theme.spacing.unit * 4\n  },\n  content: {}\n});\n\nfunction validateUrl(value) {\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\n    value\n  );\n}\n\nclass MapUrlFrom extends Component {\n  state = {\n    mapUrl:\n      'https://www.google.com/maps/d/kml?forcekml=1&mid=1uijK5r96G4IZSlJ_zaI7YiBpfISB6xNk',\n    isValidUrl: true,\n    snackbar: {\n      open: false,\n      variant: 'info',\n      message: ''\n    }\n  };\n\n  constructor() {\n    super();\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onCloseSnackbar = this.onCloseSnackbar.bind(this);\n    this.showSnackbar = this.showSnackbar.bind(this);\n  }\n\n  onCloseSnackbar(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      snackbar: {\n        ...this.state.snackbar,\n        open: false\n      }\n    });\n  }\n\n  showSnackbar(variant, message) {\n    this.setState({\n      ...this.state,\n      snackbar: {\n        ...this.state.snackbar,\n        open: true,\n        variant,\n        message\n      }\n    });\n  }\n\n  onInputChange(e) {\n    const newMapUrlValue = e.target.value;\n    this.setState({\n      ...this.state,\n      mapUrl: newMapUrlValue,\n      isValidUrl: newMapUrlValue !== '' ? validateUrl(newMapUrlValue) : true\n    });\n  }\n\n  async onFormSubmit(e) {\n    e.preventDefault();\n    const mapKmlData = await getMapKml(this.state.mapUrl);\n\n    if (mapKmlData.status === 'success') {\n      this.props.map.setMapKmlData(mapKmlData.data);\n    } else {\n      this.props.map.setMapKmlData({});\n      this.showSnackbar('error', mapKmlData.message);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'left'\n          }}\n          open={this.state.snackbar.open}\n          autoHideDuration={6000}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.onCloseSnackbar}\n            variant={this.state.snackbar.variant}\n            message={this.state.snackbar.message}\n          />\n        </Snackbar>\n        <Card className={classes.card}>\n          <CardContent className={classes.content}>\n            <form onSubmit={this.onFormSubmit}>\n              <Grid\n                container\n                direction='row'\n                justify='center'\n                alignItems='center'\n              >\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    id='input-map-url'\n                    value={this.state.mapUrl}\n                    error={!this.state.isValidUrl}\n                    onChange={this.onInputChange}\n                    label='Your Map URL'\n                    helperText='URL of your map (the map has to be public)'\n                    className={classes.textField}\n                    margin='normal'\n                    variant='outlined'\n                    fullWidth={true}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid\n                container\n                direction='row'\n                justify='flex-end'\n                alignItems='center'\n              >\n                <Grid item>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className={classes.button}\n                    type='submit'\n                    disabled={\n                      !this.state.isValidUrl || this.state.mapUrl === ''\n                    }\n                  >\n                    Get Map Info\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withMapContext(withStyles(styles)(MapUrlFrom));\n","import React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOn from '@material-ui/icons/LocationOn';\n\nconst styles = theme => ({\n  card: {\n    display: 'flex'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flex: '1 0 auto'\n  },\n  cover: {\n    width: 150,\n    height: 150\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'left',\n    paddingLeft: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit\n  }\n});\n\nfunction MapInformationPlacemark(props) {\n  const { classes, theme, placemark } = props;\n\n  function getName(placemark) {\n    if (placemark.name) {\n      return placemark.name._text\n        ? placemark.name._text\n        : placemark.name._cdata;\n    } else {\n      return '';\n    }\n  }\n\n  function getDescriptionElement(placemark) {\n    if (placemark.description) {\n      return placemark.description._text\n        ? placemark.description._text\n        : placemark.description._cdata;\n    } else {\n      return '';\n    }\n  }\n\n  function getCoordinateElement(placemark) {\n    if (placemark.Point.coordinates) {\n      const coordinateValue = getCoordinatesValues(placemark);\n      \n      return (\n        <Fragment>\n          <LocationOn fontSize='inherit' /> Lat: {coordinateValue.lat}, Lng: {coordinateValue.lng}\n        </Fragment>\n      );\n    } else {\n      return '';\n    }\n  }\n\n  function getCoordinates(placemark) {\n    const coordinatesValues = getCoordinatesValues(placemark);\n    return `${coordinatesValues.lat},${coordinatesValues.lng}`\n  }\n\n  function getCoordinatesValues(placemark) {\n    if (placemark.Point.coordinates) {\n      let coordinateValue = {\n        lat: '',\n        lng: ''\n      }\n      let coordinateText = placemark.Point.coordinates._text\n        ? placemark.Point.coordinates._text\n        : placemark.Point.coordinates._cdata;\n\n      coordinateText = coordinateText.split(',');\n\n      if (coordinateText.length > 0) {\n        coordinateValue.lat = coordinateText[1].trim();\n        coordinateValue.lng = coordinateText[0].trim();\n      }\n      return coordinateValue;\n    } else {\n      return '';\n    }\n  }\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.cover}\n        image={`https://maps.googleapis.com/maps/api/staticmap?autoscale=2&size=150x150&maptype=roadmap&key=AIzaSyB0-K4EabO1J3223LQblNbfstkPkbmb04k&format=png&visual_refresh=true&markers=size:small%7Ccolor:0x3998f1%7Clabel:1%7C${getCoordinates(placemark)}`}\n        title='Live from space album cover'\n      />\n\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          {/* <img\n            width='150'\n            src={`https://maps.googleapis.com/maps/api/staticmap?autoscale=2&size=150x150&maptype=roadmap&key=AIzaSyB0-K4EabO1J3223LQblNbfstkPkbmb04k&format=png&visual_refresh=true&markers=size:small%7Ccolor:0x3998f1%7Clabel:1%7C${getCoordinates(placemark)}`}\n            alt={getName(placemark)}\n          /> */}\n          <Typography component='h5' variant='h5'>\n            {getName(placemark)}\n          </Typography>\n\n          <Typography variant='body2' color='textSecondary'>\n            {getCoordinateElement(placemark)}\n          </Typography>\n\n          <Typography variant='body1'>{getDescriptionElement(placemark)}</Typography>\n        </CardContent>\n        <div className={classes.controls} />\n      </div>\n    </Card>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(MapInformationPlacemark);\n","import React, { Component, Fragment } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport DeleteIcon from '@material-ui/icons/LocalPrintshop';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { withMapContext } from './MapContext';\nimport MapInformationPlacemark from './MapInformationPlacemark';\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n  return true;\n}\n\nconst styles = theme => ({\n  root: {\n    marginTop: theme.spacing.unit * 4\n  },\n  printButton: {\n    position: 'absolute',\n    bottom: theme.spacing.unit,\n    right: theme.spacing.unit\n  },\n  folder: {\n    marginTop: theme.spacing.unit * 3\n  },\n  placemark: {\n    marginTop: theme.spacing.unit * 2\n  }\n});\n\nclass MapInformation extends Component {\n  render() {\n    const { mapKmlData } = this.props.map;\n    const { classes } = this.props;\n    console.log(mapKmlData);\n\n    let toReturn = '';\n    if (isEmpty(mapKmlData)) {\n      toReturn = null;\n    } else {\n      toReturn = (\n        <div className={classes.root}>\n          <Grid\n            container\n            direction='row'\n            justify='flex-end'\n            alignItems='flex-end'\n          >\n            <Grid item>\n              <Fab color='primary' aria-label='Add' className={classes.printButton}>\n                <DeleteIcon />\n              </Fab>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction='row'\n            justify='flex-start'\n            alignItems='flex-start'\n          >\n            <Grid item xs={12}>\n              <Typography component='h1' variant='h4'>\n                {mapKmlData.name._text}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='subtitle1' color='textSecondary'>\n                {mapKmlData.description._text}\n              </Typography>\n            </Grid>\n            {mapKmlData.Folder.map((folder, key) => {\n              return (\n                <Fragment key={key}>\n                  <Grid item xs={12} className={classes.folder}>\n                    <Typography component='h3' variant='h6'>\n                      {folder.name._text}\n                    </Typography>\n                  </Grid>\n                  {folder.Placemark ? folder.Placemark.map((placemark, key) => {\n                    return (\n                      <Grid\n                        item\n                        xs={12}\n                        key={key}\n                        className={classes.placemark}\n                      >\n                        <MapInformationPlacemark placemark={placemark} />\n                      </Grid>\n                    );\n                  }) : null}\n                </Fragment>\n              );\n            })}\n          </Grid>\n        </div>\n      );\n    }\n\n    return toReturn;\n  }\n}\n\nexport default withMapContext(withStyles(styles)(MapInformation));\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { MapContextProvider } from './components/MapContext';\nimport MapUrlFrom from './components/MapUrlFrom';\nimport MapInformation from './components/MapInformation';\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: '100%',\n    overflow: 'auto'\n  }\n});\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <MapContextProvider>\n        <div className={classes.root}>\n          <Grid\n            container\n            direction='row'\n            justify='center'\n            alignItems='center'\n            spacing={24}\n          >\n            <Grid item xs={11} sm={10}>\n              <MapUrlFrom />\n              <MapInformation />\n            </Grid>\n          </Grid>\n        </div>\n      </MapContextProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}